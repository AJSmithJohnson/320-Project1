Line Game Protocol (LineGame) V1.0

All MultiByte values stored using BIG ENDIAN
==================================================

game state that needs to be stored on the server?
-state of board
	A.what lines have been placed
	B.what spaces have been claimed by which player
-whose turn it is
-if someone has control of a space or a portion of spaces
-the players score

Packets from the SERVER
------------------------
STRT (Response) - when we recieve a REDY packet if the number of readied up players is 2 or greater then we send out a STRT packet and this lets the client know it's time
to switch to the game screen
	O 	L 	Datatype 	Desc
	---------------------------------------------
	0   4 	ascii 		packet type: "STRT"


JOIN (Response) - when the server recieves a join packet, it must decide whether or not the client is allowed to join
	
	O 	L 	Datatype 	Desc
	---------------------------------------------
	0   4 	ascii 		packet type: "JOIN"
	4 	1 	uint8 		join response: See below
	5 	1 	uint8 		error id(see below)

	join responses
	---------------
	(If player is accepted)
	1: is player "A"
	2: is player "B"
	3: is spectator
	(if player is denied)
	4: username too short
	5: username too long
	6: username has invalid characters
	7: username already taken
	8: username not allowed(profane?)
	9: game is full(NO MORE USERS allowed)


UPDT - state of the game

	O 	L 	Datatype 	Desc
	---------------------------------------------
	0   4 	ascii 		packet type: "UPDT"
	4 	1 	uint8 		whose turn(1 / 2)
	5 	1 	uint8 		who's won?(see below)
	6   1   uint8 		x coordinate of spot
	7   1  	uint8 		y coordinate of spot
	8 	1 	uint8 		the type of spot we are updating
	

	
	the spots
	--------------
	0: the spot should be blank
	1: the spot should have a horizontal line
	2: the spot should have a vertical line
	3: the spot should have an A in it (player A has claimed the space)
	4: the spot should have a  B in it (player B has claimed the space)
	5: the spot should have a dot(spaces that are dots by default won't change)


CHAT - when recieving a CHAT packet from a client, the server sends this chat packet out to all connected.
Except for original sender(Maybe)

	O 	L 	Datatype 	Desc
	---------------------------------------------
	0   4 	ascii 		packet type: "CHAT"
	4 	1 	uint8 		length of sender's username
	5   1   uint8      length of the chat message
	6   ? 	ascii 		sender's username
	?   ?   ascii 		chat message

SCOR - a score and update packet. When the player captures a winning piece this should be sent out instead of an update
packet

	O 	L 	Datatype 	Desc
	---------------------------------------------
	0   4 	ascii 		packet type: "SCOR"
	4 	1 	uint8 		whose turn it is
	5   1   uint8       who has won
	6   1 	uint8 		xCoordinate of the just played space
	7   1   uint8 		yCoordinate of the just played space
	8   1   uint8   	the type of the space
	9 	1 	uint8 		the xCoordinate of the scored space
	10  1  	uint8 		the yCoordinate of the scored space
	11  2   ascii  		the first two letters of the scoring players username

GWON - a packet signifying the game is over
	O 	L 	Datatype 	Desc
	---------------------------------------------
	0   4 	ascii 	 	packet type: "GWON"
	4 	1 	uint8 		winning client username length
	5 	1 	uint8 		client A's score
	6 	1 	uint8 		client B's score
	7 	1   uint8 		who has won the player number we can probably cut this out at a later time
	8 	? 	ascii 		winning clients username

LOBY - a packet that is broadcast to everyconnected user once we connect to the lobby contains all the connected users 
	O   L  Datatype  	Desc
	----------------------------------------
	0   4  ascii 		packet type: "LOBY"
	4   1  uint8 		length of connected users name
	5  	?  ascii 		clients name


================================================================================================

Packets from Client
-----------------------------------------------------

JOIN (Request) - After establishing a connection w/ the server, client will send a JOIN packet w/ a desired username. The
server will send back a response.

	O  	L  	Datatype 	Desc
	----------------------------------------------------
	0   4   asciii      packet type: "JOIN" 
	4   1   uint8       how long the username is(255 max)
	5   ?   ascii 		the desired username for this connected client


REDY - After we are sent to the lobby we can ready up by hitting the ready up button. If they hit the ready button again they will unready up

	O  	L  	Datatype 	Desc
	----------------------------------------------------
	0   4   asciii      packet type: "REDY" 
	4   1   uint8       sends a value for if we are ready or not
	


CHAT  - The player wants to chat.

	O  	L  	Datatype 	Desc
	----------------------------------------------------
	0 	4	ascii 		packet type: "CHAT"
	4	1	uint8		length of the message
	5   ?	ascii 		message for the chat (65535) max


PLAY - This packet should be submitted when the player takes their turn.
	
	O  	L  	Datatype 	Desc
	----------------------------------------------------
	0   4   ascii 		packet type:  "PLAY"
	4 	1 	uint8 		the X position of the space the player wants to play
	5   1   uint8 		nothing I was running into errors so this is just a blank space in the buffer
	6 	1 	uint8 		the Y position of the space the player wants to play
	7 	1 	uint8 		exists much the same as byte 5 I really just needed a blank space in the buffer for whatever reason
	8 	1 	uint8 		the type of space we are sending to the buffer

RQST - Sent once we connect to the lobby lets the server know that we want to update all the connected users

	O  	L  	Datatype 	Desc
	----------------------------------------------------
	0   4   ascii 		packet type:  "RQST"
